// <auto-generated />
using System;
using BOAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BOAPI.Migrations
{
    [DbContext(typeof(BOContext))]
    [Migration("20250928092022_NomDeLaMigration")]
    partial class NomDeLaMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BOAPI.Models.CheckList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstActive")
                        .HasColumnType("bit");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EstActive");

                    b.ToTable("CheckLists");
                });

            modelBuilder.Entity("BOAPI.Models.CheckListItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CheckedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsChecked")
                        .HasColumnType("bit");

                    b.Property<int?>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("CheckListItems");
                });

            modelBuilder.Entity("BOAPI.Models.Etape", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CheckListId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateValidation")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EstValidee")
                        .HasColumnType("bit");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ordre")
                        .HasColumnType("int");

                    b.Property<int?>("ValideeParId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ValideeParId");

                    b.HasIndex("CheckListId", "Ordre");

                    b.ToTable("Etapes");
                });

            modelBuilder.Entity("BOAPI.Models.Personnel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("EstActif")
                        .HasColumnType("bit");

                    b.Property<string>("Matricule")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Matricule")
                        .IsUnique();

                    b.ToTable("Personnels");
                });

            modelBuilder.Entity("BOAPI.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Commentaire")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateValidation")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EstObligatoire")
                        .HasColumnType("bit");

                    b.Property<int>("EtapeId")
                        .HasColumnType("int");

                    b.Property<string>("Reponse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Texte")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ValideeParId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EtapeId");

                    b.HasIndex("ValideeParId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("BOAPI.Models.ResponseOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Ordre")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("Valeur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("ResponseOptions");
                });

            modelBuilder.Entity("BOAPI.Models.CheckListItem", b =>
                {
                    b.HasOne("BOAPI.Models.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Question");
                });

            modelBuilder.Entity("BOAPI.Models.Etape", b =>
                {
                    b.HasOne("BOAPI.Models.CheckList", "CheckList")
                        .WithMany("Etapes")
                        .HasForeignKey("CheckListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BOAPI.Models.Personnel", "ValideePar")
                        .WithMany("EtapesValidees")
                        .HasForeignKey("ValideeParId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CheckList");

                    b.Navigation("ValideePar");
                });

            modelBuilder.Entity("BOAPI.Models.Question", b =>
                {
                    b.HasOne("BOAPI.Models.Etape", "Etape")
                        .WithMany("Questions")
                        .HasForeignKey("EtapeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BOAPI.Models.Personnel", "ValideePar")
                        .WithMany("QuestionsValidees")
                        .HasForeignKey("ValideeParId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Etape");

                    b.Navigation("ValideePar");
                });

            modelBuilder.Entity("BOAPI.Models.ResponseOption", b =>
                {
                    b.HasOne("BOAPI.Models.Question", "Question")
                        .WithMany("Options")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("BOAPI.Models.CheckList", b =>
                {
                    b.Navigation("Etapes");
                });

            modelBuilder.Entity("BOAPI.Models.Etape", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("BOAPI.Models.Personnel", b =>
                {
                    b.Navigation("EtapesValidees");

                    b.Navigation("QuestionsValidees");
                });

            modelBuilder.Entity("BOAPI.Models.Question", b =>
                {
                    b.Navigation("Options");
                });
#pragma warning restore 612, 618
        }
    }
}
